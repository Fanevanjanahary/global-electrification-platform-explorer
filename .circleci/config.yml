version: 2.1
jobs:
  build:
    docker:
      - image: node:10

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Lint
          command: yarn lint

      - run:
          name: Building site production
          command: |
            if [ "${CIRCLE_BRANCH}" == "${PRODUCTION_BRANCH}" ]; then
              yarn build           
            else
              echo "Skip building production site"
            fi

      - run:
          name: Building site staging
          command: |
            if [ "${CIRCLE_BRANCH}" == "${STAGING_BRANCH}" ]; then
              yarn stage           
            else
              echo "Skip building staging site"
            fi

      - run:
          name: Deploy to staging
          command: |
            if [ "${CIRCLE_BRANCH}" == "${STAGING_BRANCH}" ]; then
              cp ./dist/index.html ./dist/200.html
              ./node_modules/surge/lib/cli.js --project ./dist --domain gep-explorer.surge.sh
            else
              echo "Not the branch you're looking for, skipping deploy"
            fi
      - persist_to_workspace:
          root: ~/repo
          paths:
              - dist
            
  deploy-production:
    docker:
      - image: 'circleci/python:3.7'
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Sync files at S3
          command: aws s3 sync --delete /tmp/workspace/dist s3://${PRODUCTION_S3_BUCKET}/

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master
